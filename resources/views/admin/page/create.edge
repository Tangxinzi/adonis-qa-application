@layout('layouts.main-admin')

@section('title')
<meta name="keywords" content="" />
<meta name="description" content="" />
<title>{{ data.title }} - QA System </title>
@endsection

@section('style')
<link href="https://unpkg.com/@wangeditor/editor@latest/dist/css/style.css" rel="stylesheet">
<style media="screen">
  .meta {color: rgba(0,0,0,.4);}
  .jobs .ui.divider:last-child {display: none !important;}
  .job p {margin-bottom: 0.75rem;}
  .ui.message>.close.icon {position: absolute; margin: 0; top: 14px; right: 1.3em;}
  #editor—wrapper { border: 1px solid #ccc; z-index: 100; }
  #toolbar-container { border-bottom: 1px solid #ccc; }
  #editor-container { height: 500px; }
</style>
@endsection

@section('content')
  @!component('components.navbar-admin', data=data, csrf=csrfField())
  <div class="ui container" style="padding: 30px 0;">
    <div class="ui stackable four column grid">
      <div class="three wide column">
        @!component('components.navbar-admin-menu', data=data, csrf=csrfField())
      </div>
      <div class="thirteen wide column">
        <div class="ui header flex-between">
          <span>{{ data.title }}</span>
        </div>
        @if(flashMessage('message'))
          @!component('components.alert', {
            type: [flashMessage('type')],
            message: [flashMessage('message')]
          })
        @endif
        @!component('admin.page.components.form', data=data, active=data.active, csrf=csrfField(), submit='create')
      </div>
    </div>
  </div>
@endsection

@section('script')
<script src="https://unpkg.com/@wangeditor/editor@latest/dist/index.js"></script>
<script type="text/javascript">
  const { createEditor, createToolbar } = window.wangEditor

  const editor = createEditor({
    selector: '#editor-container',
    html: '',
    config: {
      placeholder: '请输入内容...',
      MENU_CONF: {
        uploadImage: {
          fieldName: 'images',
          base64LimitSize: 10 * 1024 * 1024 // 10M 以下插入 base64
        }
      },
      onChange(editor) {
        $('#detail').val(editor.getHtml())
      }
    },
    mode: 'simple', // or 'simple'
  })

  const toolbarConfig = {}

  const toolbar = createToolbar({
    editor,
    selector: '#toolbar-container',
    config: toolbarConfig,
    mode: 'simple', // or 'simple'
  })

  var reads = new FileReader()
  function change(input, src) {
    reads.readAsDataURL($(input)[0].files[0])
    reads.onload = function(e) {
      $(src).attr("src", this.result)
    }
  }
</script>
@endsection
